#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc -i engine/scene3d/shaders/BasicShader.glsl -o engine/scene3d/shaders/BasicShader.glsl.h -l glsl330:glsl100:metal_macos:hlsl4

    Overview:

        Shader program 'basic_shader':
            Get shader desc: basic_shader_shader_desc(sg_query_backend());
            Vertex shader: vs
                Attribute slots:
                    ATTR_vs_pos = 0
                    ATTR_vs_norm = 1
                    ATTR_vs_texcoord0 = 2
                    ATTR_vs_bary = 3
                    ATTR_vs_instance_uv = 4
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: fs
                Uniform block 'fs_params':
                    C struct: fs_params_t
                    Bind slot: SLOT_fs_params = 0
                Image 'tex':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tex = 0


    Shader descriptor structs:

        sg_shader basic_shader = sg_make_shader(basic_shader_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_pos] = { ... },
                    [ATTR_vs_norm] = { ... },
                    [ATTR_vs_texcoord0] = { ... },
                    [ATTR_vs_bary] = { ... },
                    [ATTR_vs_instance_uv] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_tex = 0;

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .mvp = ...;
            .m = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &SG_RANGE(vs_params));

    Bind slot and C-struct for uniform block 'fs_params':

        fs_params_t fs_params = {
            .u_eye = ...;
            .u_wireframe = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_fs_params, &SG_RANGE(fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_pos (0)
#define ATTR_vs_norm (1)
#define ATTR_vs_texcoord0 (2)
#define ATTR_vs_bary (3)
#define ATTR_vs_instance_uv (4)
#define SLOT_tex (0)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    hmm_mat4 mvp;
    hmm_mat4 m;
} vs_params_t;
#pragma pack(pop)
#define SLOT_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    hmm_vec3 u_eye;
    float u_wireframe;
} fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 vs_params[8];
    layout(location = 0) in vec4 pos;
    out vec2 uv;
    layout(location = 2) in vec2 texcoord0;
    layout(location = 4) in vec4 instance_uv;
    out vec3 vert;
    out vec3 vert_normal;
    layout(location = 1) in vec3 norm;
    out vec3 vert_bary;
    layout(location = 3) in vec3 bary;
    
    void main()
    {
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * pos;
        uv = texcoord0;
        uv.x = instance_uv.x + (texcoord0.x * (instance_uv.y - instance_uv.x));
        uv.y = instance_uv.z + (texcoord0.y * (instance_uv.w - instance_uv.z));
        mat4 _72 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        vert = (_72 * vec4(pos.xyz, 1.0)).xyz;
        vert_normal = (_72 * vec4(norm, 0.0)).xyz;
        vert_bary = bary;
    }
    
*/
static const char vs_source_glsl330[763] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x62,0x61,0x72,0x79,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x62,0x61,0x72,0x79,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x2e,0x78,0x20,0x3d,0x20,0x69,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x28,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2e,0x78,0x20,0x2a,0x20,0x28,0x69,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x79,0x20,0x2d,0x20,0x69,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x76,0x2e,0x79,0x20,0x3d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x5f,0x75,0x76,0x2e,0x7a,0x20,0x2b,0x20,0x28,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x30,0x2e,0x79,0x20,0x2a,0x20,0x28,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x5f,0x75,0x76,0x2e,0x77,0x20,0x2d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x5f,0x75,0x76,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,
    0x74,0x34,0x20,0x5f,0x37,0x32,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x20,
    0x3d,0x20,0x28,0x5f,0x37,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,
    0x73,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x3d,0x20,0x28,0x5f,0x37,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x6e,0x6f,0x72,0x6d,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,
    0x20,0x62,0x61,0x72,0x79,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 fs_params[1];
    uniform sampler2D tex;
    
    in vec2 uv;
    in vec3 vert_bary;
    in vec3 vert_normal;
    in vec3 vert;
    layout(location = 0) out vec4 frag_color;
    
    void main()
    {
        vec4 _21 = texture(tex, uv);
        vec3 _26 = _21.xyz;
        float _32 = _21.w;
        vec3 rgb_out = _26;
        float alpha_out = _32;
        if (fs_params[0].w == 1.0)
        {
            vec3 _55 = fwidth(vert_bary);
            vec3 _63 = smoothstep(vec3(0.0), _55 * 1.0, vert_bary);
            vec3 _79 = _26 * (1.0 - min(min(_63.x, _63.y), _63.z));
            rgb_out = _79;
            bool _83 = _79.x < 0.0199999995529651641845703125;
            bool _89;
            if (_83)
            {
                _89 = rgb_out.y < 0.0199999995529651641845703125;
            }
            else
            {
                _89 = _83;
            }
            bool _95;
            if (_89)
            {
                _95 = rgb_out.z < 0.0199999995529651641845703125;
            }
            else
            {
                _95 = _89;
            }
            if (_95)
            {
                rgb_out = _26 * 0.800000011920928955078125;
                alpha_out = _32 * 0.800000011920928955078125;
            }
        }
        rgb_out = mix(vec3(0.0), rgb_out, vec3(clamp(dot(normalize(vert_normal), normalize(vert - fs_params[0].xyz)) + 0.1500000059604644775390625, 0.0, 1.0)));
        frag_color = vec4(rgb_out, alpha_out);
    }
    
*/
static const char fs_source_glsl330[1311] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x3b,0x0a,
    0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x3b,0x0a,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,
    0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x74,0x65,0x78,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x33,0x32,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,
    0x32,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,
    0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2e,0x77,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x35,0x35,0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,0x68,0x28,0x76,0x65,
    0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x73,0x6d,0x6f,
    0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x2c,0x20,0x5f,0x35,0x35,0x20,0x2a,0x20,0x31,0x2e,0x30,0x2c,0x20,0x76,0x65,
    0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x39,0x20,0x3d,0x20,0x5f,0x32,0x36,
    0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x6d,0x69,
    0x6e,0x28,0x5f,0x36,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x79,0x29,0x2c,
    0x20,0x5f,0x36,0x33,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x37,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,
    0x33,0x20,0x3d,0x20,0x5f,0x37,0x39,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,
    0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,
    0x31,0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x39,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x33,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,0x6f,
    0x75,0x74,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,
    0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,
    0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x5f,0x38,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x39,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x2e,
    0x7a,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x35,
    0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,0x30,0x33,0x31,
    0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x5f,0x38,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x39,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x67,0x62,
    0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,0x2a,0x20,0x30,0x2e,0x38,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x5f,0x33,0x32,0x20,0x2a,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,
    0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,
    0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,
    0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,0x20,0x2d,
    0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,
    0x7a,0x29,0x29,0x20,0x2b,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,
    0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,
    0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x61,
    0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    
    uniform vec4 vs_params[8];
    attribute vec4 pos;
    varying vec2 uv;
    attribute vec2 texcoord0;
    attribute vec4 instance_uv;
    varying vec3 vert;
    varying vec3 vert_normal;
    attribute vec3 norm;
    varying vec3 vert_bary;
    attribute vec3 bary;
    
    void main()
    {
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * pos;
        uv = texcoord0;
        uv.x = instance_uv.x + (texcoord0.x * (instance_uv.y - instance_uv.x));
        uv.y = instance_uv.z + (texcoord0.y * (instance_uv.w - instance_uv.z));
        mat4 _72 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        vert = (_72 * vec4(pos.xyz, 1.0)).xyz;
        vert_normal = (_72 * vec4(norm, 0.0)).xyz;
        vert_bary = bary;
    }
    
*/
static const char vs_source_glsl100[709] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x76,0x61,0x72,
    0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x20,0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x75,0x76,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,0x20,
    0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x3b,0x0a,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x61,0x72,
    0x79,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,
    0x20,0x2a,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x76,0x2e,0x78,0x20,0x3d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x28,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x30,0x2e,0x78,0x20,0x2a,0x20,0x28,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x75,0x76,0x2e,0x79,0x20,0x2d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x75,0x76,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x2e,0x79,
    0x20,0x3d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x7a,
    0x20,0x2b,0x20,0x28,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2e,0x79,0x20,
    0x2a,0x20,0x28,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x77,
    0x20,0x2d,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x7a,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x37,0x32,
    0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x20,0x3d,0x20,0x28,0x5f,0x37,0x32,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x28,0x5f,
    0x37,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,0x20,0x62,0x61,0x72,0x79,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    #extension GL_OES_standard_derivatives : require
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 fs_params[1];
    uniform highp sampler2D tex;
    
    varying highp vec2 uv;
    varying highp vec3 vert_bary;
    varying highp vec3 vert_normal;
    varying highp vec3 vert;
    
    void main()
    {
        highp vec4 _21 = texture2D(tex, uv);
        highp vec3 _26 = _21.xyz;
        highp float _32 = _21.w;
        highp vec3 rgb_out = _26;
        highp float alpha_out = _32;
        if (fs_params[0].w == 1.0)
        {
            highp vec3 _55 = fwidth(vert_bary);
            highp vec3 _63 = smoothstep(vec3(0.0), _55 * 1.0, vert_bary);
            highp vec3 _79 = _26 * (1.0 - min(min(_63.x, _63.y), _63.z));
            rgb_out = _79;
            bool _83 = _79.x < 0.0199999995529651641845703125;
            bool _89;
            if (_83)
            {
                _89 = rgb_out.y < 0.0199999995529651641845703125;
            }
            else
            {
                _89 = _83;
            }
            bool _95;
            if (_89)
            {
                _95 = rgb_out.z < 0.0199999995529651641845703125;
            }
            else
            {
                _95 = _89;
            }
            if (_95)
            {
                rgb_out = _26 * 0.800000011920928955078125;
                alpha_out = _32 * 0.800000011920928955078125;
            }
        }
        rgb_out = mix(vec3(0.0), rgb_out, vec3(clamp(dot(normalize(vert_normal), normalize(vert - fs_params[0].xyz)) + 0.1500000059604644775390625, 0.0, 1.0)));
        gl_FragData[0] = vec4(rgb_out, alpha_out);
    }
    
*/
static const char fs_source_glsl100[1474] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x23,0x65,0x78,
    0x74,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x20,0x47,0x4c,0x5f,0x4f,0x45,0x53,0x5f,0x73,
    0x74,0x61,0x6e,0x64,0x61,0x72,0x64,0x5f,0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,
    0x76,0x65,0x73,0x20,0x3a,0x20,0x72,0x65,0x71,0x75,0x69,0x72,0x65,0x0a,0x70,0x72,
    0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x79,
    0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,
    0x76,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x3b,
    0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x28,0x74,0x65,0x78,0x2c,0x20,0x75,0x76,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x32,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x32,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x67,0x62,0x5f,
    0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x32,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,
    0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,
    0x2e,0x77,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x35,0x35,0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,0x68,
    0x28,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x36,0x33,0x20,0x3d,0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,
    0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x5f,0x35,0x35,0x20,
    0x2a,0x20,0x31,0x2e,0x30,0x2c,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x39,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,
    0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x6d,0x69,0x6e,
    0x28,0x5f,0x36,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x79,0x29,0x2c,0x20,
    0x5f,0x36,0x33,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x37,0x39,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x33,
    0x20,0x3d,0x20,0x5f,0x37,0x39,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,
    0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,
    0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x39,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x33,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,
    0x74,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,0x39,
    0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,0x30,
    0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x5f,0x38,0x33,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x39,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x2e,0x7a,
    0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,
    0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x39,0x35,0x20,0x3d,0x20,0x5f,0x38,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x39,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,
    0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,0x2a,0x20,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x5f,0x33,0x32,0x20,0x2a,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x72,
    0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,0x20,0x2d,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,
    0x29,0x29,0x20,0x2b,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,
    0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x44,0x61,0x74,0x61,0x5b,0x30,
    0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,
    0x2c,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _21_mvp : packoffset(c0);
        row_major float4x4 _21_m : packoffset(c4);
    };
    
    
    static float4 gl_Position;
    static float4 pos;
    static float2 uv;
    static float2 texcoord0;
    static float4 instance_uv;
    static float3 vert;
    static float3 vert_normal;
    static float3 norm;
    static float3 vert_bary;
    static float3 bary;
    
    struct SPIRV_Cross_Input
    {
        float4 pos : TEXCOORD0;
        float3 norm : TEXCOORD1;
        float2 texcoord0 : TEXCOORD2;
        float3 bary : TEXCOORD3;
        float4 instance_uv : TEXCOORD4;
    };
    
    struct SPIRV_Cross_Output
    {
        float2 uv : TEXCOORD0;
        float3 vert : TEXCOORD1;
        float3 vert_normal : TEXCOORD2;
        float3 vert_bary : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };
    
    #line 28 "engine/scene3d/shaders/BasicShader.glsl"
    void vert_main()
    {
    #line 28 "engine/scene3d/shaders/BasicShader.glsl"
        gl_Position = mul(pos, _21_mvp);
    #line 29 "engine/scene3d/shaders/BasicShader.glsl"
        uv = texcoord0;
    #line 30 "engine/scene3d/shaders/BasicShader.glsl"
        uv.x = instance_uv.x + (texcoord0.x * (instance_uv.y - instance_uv.x));
    #line 31 "engine/scene3d/shaders/BasicShader.glsl"
        uv.y = instance_uv.z + (texcoord0.y * (instance_uv.w - instance_uv.z));
    #line 32 "engine/scene3d/shaders/BasicShader.glsl"
        vert = mul(float4(pos.xyz, 1.0f), _21_m).xyz;
        vert_normal = mul(float4(norm, 0.0f), _21_m).xyz;
    #line 34 "engine/scene3d/shaders/BasicShader.glsl"
        vert_bary = bary;
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        pos = stage_input.pos;
        texcoord0 = stage_input.texcoord0;
        instance_uv = stage_input.instance_uv;
        norm = stage_input.norm;
        bary = stage_input.bary;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.uv = uv;
        stage_output.vert = vert;
        stage_output.vert_normal = vert_normal;
        stage_output.vert_bary = vert_bary;
        return stage_output;
    }
*/
static const char vs_source_hlsl4[1952] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x31,0x5f,0x6d,0x76,
    0x70,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,
    0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x31,0x5f,0x6d,
    0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,
    0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,
    0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,
    0x74,0x5f,0x62,0x61,0x72,0x79,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x61,0x72,0x79,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x61,
    0x72,0x79,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x69,0x6e,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x5f,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x34,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,
    0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x62,0x61,0x72,0x79,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x32,0x38,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,
    0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,
    0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x38,0x20,0x22,0x65,0x6e,0x67,0x69,
    0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x70,0x6f,0x73,0x2c,0x20,
    0x5f,0x32,0x31,0x5f,0x6d,0x76,0x70,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x32,0x39,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,
    0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,
    0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x30,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,
    0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,
    0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x2e,0x78,0x20,0x3d,0x20,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x28,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2e,0x78,0x20,0x2a,0x20,0x28,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x79,0x20,0x2d,0x20,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x78,0x29,0x29,0x3b,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x31,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,
    0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,
    0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,
    0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x2e,0x79,0x20,0x3d,0x20,0x69,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x7a,0x20,0x2b,0x20,0x28,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2e,0x79,0x20,0x2a,0x20,0x28,0x69,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x77,0x20,0x2d,0x20,0x69,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,
    0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,
    0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x20,0x3d,0x20,0x6d,0x75,0x6c,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x32,0x31,0x5f,0x6d,0x29,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x6e,0x6f,0x72,0x6d,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x32,
    0x31,0x5f,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x33,0x34,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,
    0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,
    0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,0x20,0x62,0x61,0x72,
    0x79,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6e,0x6f,0x72,0x6d,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x61,0x72,
    0x79,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x62,0x61,0x72,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x76,0x65,0x72,0x74,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,
    0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,0x65,0x72,
    0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,
    0x72,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,

};
/*
    cbuffer fs_params : register(b0)
    {
        float3 _39_u_eye : packoffset(c0);
        float _39_u_wireframe : packoffset(c0.w);
    };
    
    Texture2D<float4> tex : register(t0);
    SamplerState _tex_sampler : register(s0);
    
    static float2 uv;
    static float3 vert_bary;
    static float3 vert_normal;
    static float3 vert;
    static float4 frag_color;
    
    struct SPIRV_Cross_Input
    {
        float2 uv : TEXCOORD0;
        float3 vert : TEXCOORD1;
        float3 vert_normal : TEXCOORD2;
        float3 vert_bary : TEXCOORD3;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };
    
    #line 23 "engine/scene3d/shaders/BasicShader.glsl"
    void frag_main()
    {
    #line 23 "engine/scene3d/shaders/BasicShader.glsl"
        float4 _21 = tex.Sample(_tex_sampler, uv);
        float3 _26 = _21.xyz;
        float _32 = _21.w;
        float3 rgb_out = _26;
        float alpha_out = _32;
    #line 31 "engine/scene3d/shaders/BasicShader.glsl"
        if (_39_u_wireframe == 1.0f)
        {
    #line 34 "engine/scene3d/shaders/BasicShader.glsl"
            float3 _55 = fwidth(vert_bary);
            float3 _63 = smoothstep(0.0f.xxx, _55 * 1.0f, vert_bary);
            float3 _79 = _26 * (1.0f - min(min(_63.x, _63.y), _63.z));
            rgb_out = _79;
            bool _83 = _79.x < 0.0199999995529651641845703125f;
            bool _89;
            if (_83)
            {
                _89 = rgb_out.y < 0.0199999995529651641845703125f;
            }
            else
            {
                _89 = _83;
            }
            bool _95;
            if (_89)
            {
                _95 = rgb_out.z < 0.0199999995529651641845703125f;
            }
            else
            {
                _95 = _89;
            }
            if (_95)
            {
                rgb_out = _26 * 0.800000011920928955078125f;
                alpha_out = _32 * 0.800000011920928955078125f;
            }
        }
    #line 52 "engine/scene3d/shaders/BasicShader.glsl"
    #line 53 "engine/scene3d/shaders/BasicShader.glsl"
    #line 55 "engine/scene3d/shaders/BasicShader.glsl"
        rgb_out = lerp(0.0f.xxx, rgb_out, clamp(dot(normalize(vert_normal), normalize(vert - _39_u_eye)) + 0.1500000059604644775390625f, 0.0f, 1.0f).xxx);
    #line 60 "engine/scene3d/shaders/BasicShader.glsl"
        frag_color = float4(rgb_out, alpha_out);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        uv = stage_input.uv;
        vert_bary = stage_input.vert_bary;
        vert_normal = stage_input.vert_normal;
        vert = stage_input.vert;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const char fs_source_hlsl4[2441] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,
    0x39,0x5f,0x75,0x5f,0x65,0x79,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x33,0x39,0x5f,0x75,0x5f,0x77,0x69,0x72,0x65,0x66,0x72,
    0x61,0x6d,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x74,0x65,
    0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,
    0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x5f,
    0x74,0x65,0x78,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x3a,0x20,0x72,0x65,
    0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,
    0x74,0x5f,0x62,0x61,0x72,0x79,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x33,0x20,0x22,0x65,0x6e,0x67,
    0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,
    0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,
    0x33,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,
    0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x5f,0x74,0x65,0x78,0x5f,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x33,0x32,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x5f,0x32,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,0x3b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x31,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,
    0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,
    0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x39,0x5f,
    0x75,0x5f,0x77,0x69,0x72,0x65,0x66,0x72,0x61,0x6d,0x65,0x20,0x3d,0x3d,0x20,0x31,
    0x2e,0x30,0x66,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x33,0x34,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,
    0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,
    0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x35,
    0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,0x68,0x28,0x76,0x65,0x72,0x74,0x5f,0x62,
    0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x73,0x6d,0x6f,0x6f,0x74,
    0x68,0x73,0x74,0x65,0x70,0x28,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x2c,0x20,
    0x5f,0x35,0x35,0x20,0x2a,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x76,0x65,0x72,0x74,
    0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x39,0x20,0x3d,0x20,0x5f,0x32,0x36,
    0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x6d,
    0x69,0x6e,0x28,0x5f,0x36,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x79,0x29,
    0x2c,0x20,0x5f,0x36,0x33,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x37,0x39,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,
    0x38,0x33,0x20,0x3d,0x20,0x5f,0x37,0x39,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,
    0x31,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,
    0x34,0x31,0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x39,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x33,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x72,0x67,0x62,
    0x5f,0x6f,0x75,0x74,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,
    0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,
    0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x5f,0x38,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x39,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,0x6f,
    0x75,0x74,0x2e,0x7a,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,
    0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,
    0x30,0x33,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x5f,0x38,0x39,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x39,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,0x2a,
    0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,
    0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,
    0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,0x20,0x2a,0x20,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x35,
    0x32,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,
    0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x35,0x33,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,
    0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,
    0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x35,0x35,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,
    0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,
    0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x6c,0x65,0x72,0x70,0x28,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x2c,0x20,0x72,
    0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,
    0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x76,0x65,0x72,0x74,0x20,0x2d,0x20,0x5f,0x33,0x39,0x5f,0x75,
    0x5f,0x65,0x79,0x65,0x29,0x29,0x20,0x2b,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,
    0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,
    0x30,0x36,0x32,0x35,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x2e,0x78,0x78,0x78,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,
    0x30,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,
    0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x61,0x6c,0x70,
    0x68,0x61,0x5f,0x6f,0x75,0x74,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x75,0x76,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x65,0x72,0x74,0x5f,0x62,
    0x61,0x72,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x65,0x72,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct vs_params
    {
        float4x4 mvp;
        float4x4 m;
    };
    
    struct main0_out
    {
        float2 uv [[user(locn0)]];
        float3 vert [[user(locn1)]];
        float3 vert_normal [[user(locn2)]];
        float3 vert_bary [[user(locn3)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float4 pos [[attribute(0)]];
        float3 norm [[attribute(1)]];
        float2 texcoord0 [[attribute(2)]];
        float3 bary [[attribute(3)]];
        float4 instance_uv [[attribute(4)]];
    };
    
    #line 28 "engine/scene3d/shaders/BasicShader.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _21 [[buffer(0)]])
    {
        main0_out out = {};
    #line 28 "engine/scene3d/shaders/BasicShader.glsl"
        out.gl_Position = _21.mvp * in.pos;
    #line 29 "engine/scene3d/shaders/BasicShader.glsl"
        out.uv = in.texcoord0;
    #line 30 "engine/scene3d/shaders/BasicShader.glsl"
        out.uv.x = in.instance_uv.x + (in.texcoord0.x * (in.instance_uv.y - in.instance_uv.x));
    #line 31 "engine/scene3d/shaders/BasicShader.glsl"
        out.uv.y = in.instance_uv.z + (in.texcoord0.y * (in.instance_uv.w - in.instance_uv.z));
    #line 32 "engine/scene3d/shaders/BasicShader.glsl"
        out.vert = (_21.m * float4(in.pos.xyz, 1.0)).xyz;
        out.vert_normal = (_21.m * float4(in.norm, 0.0)).xyz;
    #line 34 "engine/scene3d/shaders/BasicShader.glsl"
        out.vert_bary = in.bary;
        return out;
    }
    
*/
static const char vs_source_metal_macos[1417] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x76,0x70,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,
    0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,
    0x72,0x74,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x62,0x61,0x72,0x79,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x28,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x20,
    0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x34,0x29,0x5d,0x5d,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x38,0x20,0x22,
    0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,
    0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,
    0x6e,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,
    0x31,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x32,0x38,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,
    0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,
    0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x6d,0x76,0x70,0x20,0x2a,0x20,0x69,0x6e,
    0x2e,0x70,0x6f,0x73,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x39,0x20,0x22,
    0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,
    0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,
    0x2e,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x30,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x30,0x20,0x22,0x65,0x6e,
    0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x75,
    0x76,0x2e,0x78,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x5f,0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x28,0x69,0x6e,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x30,0x2e,0x78,0x20,0x2a,0x20,0x28,0x69,0x6e,0x2e,0x69,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x79,0x20,0x2d,0x20,0x69,
    0x6e,0x2e,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x78,0x29,
    0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x31,0x20,0x22,0x65,0x6e,0x67,
    0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,
    0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x75,0x76,
    0x2e,0x79,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x5f,0x75,0x76,0x2e,0x7a,0x20,0x2b,0x20,0x28,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x2e,0x79,0x20,0x2a,0x20,0x28,0x69,0x6e,0x2e,0x69,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x77,0x20,0x2d,0x20,0x69,0x6e,
    0x2e,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x75,0x76,0x2e,0x7a,0x29,0x29,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,0x20,0x22,0x65,0x6e,0x67,0x69,
    0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x65,0x72,
    0x74,0x20,0x3d,0x20,0x28,0x5f,0x32,0x31,0x2e,0x6d,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x28,0x5f,0x32,0x31,0x2e,0x6d,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,0x6d,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x34,0x20,0x22,0x65,
    0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,
    0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,
    0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x62,
    0x61,0x72,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct fs_params
    {
        packed_float3 u_eye;
        float u_wireframe;
    };
    
    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float2 uv [[user(locn0)]];
        float3 vert [[user(locn1)]];
        float3 vert_normal [[user(locn2)]];
        float3 vert_bary [[user(locn3)]];
    };
    
    #line 23 "engine/scene3d/shaders/BasicShader.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant fs_params& _39 [[buffer(0)]], texture2d<float> tex [[texture(0)]], sampler texSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 23 "engine/scene3d/shaders/BasicShader.glsl"
        float4 _21 = tex.sample(texSmplr, in.uv);
        float3 _26 = _21.xyz;
        float _32 = _21.w;
        float3 rgb_out = _26;
        float alpha_out = _32;
    #line 31 "engine/scene3d/shaders/BasicShader.glsl"
        if (_39.u_wireframe == 1.0)
        {
    #line 34 "engine/scene3d/shaders/BasicShader.glsl"
            float3 _55 = fwidth(in.vert_bary);
            float3 _63 = smoothstep(float3(0.0), _55 * 1.0, in.vert_bary);
            float3 _79 = _26 * (1.0 - fast::min(fast::min(_63.x, _63.y), _63.z));
            rgb_out = _79;
            bool _83 = _79.x < 0.0199999995529651641845703125;
            bool _89;
            if (_83)
            {
                _89 = rgb_out.y < 0.0199999995529651641845703125;
            }
            else
            {
                _89 = _83;
            }
            bool _95;
            if (_89)
            {
                _95 = rgb_out.z < 0.0199999995529651641845703125;
            }
            else
            {
                _95 = _89;
            }
            if (_95)
            {
                rgb_out = _26 * 0.800000011920928955078125;
                alpha_out = _32 * 0.800000011920928955078125;
            }
        }
    #line 52 "engine/scene3d/shaders/BasicShader.glsl"
    #line 53 "engine/scene3d/shaders/BasicShader.glsl"
    #line 55 "engine/scene3d/shaders/BasicShader.glsl"
        rgb_out = mix(float3(0.0), rgb_out, float3(fast::clamp(dot(normalize(in.vert_normal), normalize(in.vert - float3(_39.u_eye))) + 0.1500000059604644775390625, 0.0, 1.0)));
    #line 60 "engine/scene3d/shaders/BasicShader.glsl"
        out.frag_color = float4(rgb_out, alpha_out);
        return out;
    }
    
*/
static const char fs_source_metal_macos[2166] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x75,0x5f,0x65,
    0x79,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x75,0x5f,
    0x77,0x69,0x72,0x65,0x66,0x72,0x61,0x6d,0x65,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,
    0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x65,0x72,0x74,0x5f,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x32,0x33,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,
    0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,
    0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,
    0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x33,0x39,0x20,0x5b,0x5b,0x62,0x75,
    0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,0x78,0x20,
    0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,
    0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x32,0x33,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,
    0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,
    0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x53,0x6d,0x70,
    0x6c,0x72,0x2c,0x20,0x69,0x6e,0x2e,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x36,0x20,0x3d,0x20,0x5f,0x32,0x31,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x32,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x5f,0x32,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x31,0x20,0x22,0x65,0x6e,0x67,0x69,
    0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x39,
    0x2e,0x75,0x5f,0x77,0x69,0x72,0x65,0x66,0x72,0x61,0x6d,0x65,0x20,0x3d,0x3d,0x20,
    0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x33,0x34,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,
    0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,
    0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x35,
    0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,0x68,0x28,0x69,0x6e,0x2e,0x76,0x65,0x72,
    0x74,0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x73,0x6d,
    0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x5f,0x35,0x35,0x20,0x2a,0x20,0x31,0x2e,0x30,0x2c,
    0x20,0x69,0x6e,0x2e,0x76,0x65,0x72,0x74,0x5f,0x62,0x61,0x72,0x79,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x37,0x39,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x66,0x61,0x73,0x74,
    0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x36,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,
    0x2e,0x79,0x29,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x5f,0x37,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,
    0x6c,0x20,0x5f,0x38,0x33,0x20,0x3d,0x20,0x5f,0x37,0x39,0x2e,0x78,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,
    0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x38,0x39,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,
    0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x72,
    0x67,0x62,0x5f,0x6f,0x75,0x74,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,
    0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,
    0x38,0x34,0x35,0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x38,0x39,0x20,0x3d,0x20,0x5f,0x38,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x39,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x39,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x72,0x67,0x62,0x5f,
    0x6f,0x75,0x74,0x2e,0x7a,0x20,0x3c,0x20,0x30,0x2e,0x30,0x31,0x39,0x39,0x39,0x39,
    0x39,0x39,0x39,0x35,0x35,0x32,0x39,0x36,0x35,0x31,0x36,0x34,0x31,0x38,0x34,0x35,
    0x37,0x30,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x35,0x20,0x3d,0x20,0x5f,0x38,0x39,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x39,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x5f,0x32,0x36,0x20,0x2a,
    0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,
    0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,
    0x75,0x74,0x20,0x3d,0x20,0x5f,0x33,0x32,0x20,0x2a,0x20,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x35,0x32,0x20,
    0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,0x53,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x35,0x33,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,0x65,0x6e,0x65,
    0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,0x73,0x69,0x63,
    0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x35,0x35,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,0x63,
    0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,0x61,
    0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x67,0x62,0x5f,0x6f,0x75,0x74,0x20,0x3d,0x20,0x6d,0x69,
    0x78,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x72,
    0x67,0x62,0x5f,0x6f,0x75,0x74,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x65,0x72,0x74,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x65,0x72,0x74,0x20,0x2d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x5f,0x33,0x39,0x2e,0x75,0x5f,0x65,0x79,0x65,0x29,0x29,
    0x29,0x20,0x2b,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x36,0x30,0x20,0x22,0x65,0x6e,0x67,0x69,0x6e,0x65,0x2f,0x73,
    0x63,0x65,0x6e,0x65,0x33,0x64,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x42,
    0x61,0x73,0x69,0x63,0x53,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,
    0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x72,0x67,0x62,
    0x5f,0x6f,0x75,0x74,0x2c,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x6f,0x75,0x74,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before BasicShader.glsl.h"
#endif
static inline const sg_shader_desc* basic_shader_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "pos";
      desc.attrs[1].name = "norm";
      desc.attrs[2].name = "texcoord0";
      desc.attrs[3].name = "bary";
      desc.attrs[4].name = "instance_uv";
      desc.vs.source = vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "basic_shader_shader";
    };
    return &desc;
  }
  if (backend == SG_BACKEND_GLES2) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "pos";
      desc.attrs[1].name = "norm";
      desc.attrs[2].name = "texcoord0";
      desc.attrs[3].name = "bary";
      desc.attrs[4].name = "instance_uv";
      desc.vs.source = vs_source_glsl100;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = fs_source_glsl100;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "basic_shader_shader";
    };
    return &desc;
  }
  if (backend == SG_BACKEND_D3D11) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].sem_name = "TEXCOORD";
      desc.attrs[0].sem_index = 0;
      desc.attrs[1].sem_name = "TEXCOORD";
      desc.attrs[1].sem_index = 1;
      desc.attrs[2].sem_name = "TEXCOORD";
      desc.attrs[2].sem_index = 2;
      desc.attrs[3].sem_name = "TEXCOORD";
      desc.attrs[3].sem_index = 3;
      desc.attrs[4].sem_name = "TEXCOORD";
      desc.attrs[4].sem_index = 4;
      desc.vs.source = vs_source_hlsl4;
      desc.vs.d3d11_target = "vs_4_0";
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.fs.source = fs_source_hlsl4;
      desc.fs.d3d11_target = "ps_4_0";
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "basic_shader_shader";
    };
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_MACOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = vs_source_metal_macos;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 128;
      desc.fs.source = fs_source_metal_macos;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "basic_shader_shader";
    };
    return &desc;
  }
  return 0;
}
